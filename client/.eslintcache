[{"D:\\Trash\\WebsiteDevelopment\\freelance\\game-land\\client\\src\\index.js":"1","D:\\Trash\\WebsiteDevelopment\\freelance\\game-land\\client\\src\\App.js":"2","D:\\Trash\\WebsiteDevelopment\\freelance\\game-land\\client\\src\\components\\NavBar.js":"3","D:\\Trash\\WebsiteDevelopment\\freelance\\game-land\\client\\src\\pages\\CustomersToday.js":"4","D:\\Trash\\WebsiteDevelopment\\freelance\\game-land\\client\\src\\components\\CustomerCard.js":"5","D:\\Trash\\WebsiteDevelopment\\freelance\\game-land\\client\\src\\consts\\plans.js":"6","D:\\Trash\\WebsiteDevelopment\\freelance\\game-land\\client\\src\\components\\Loader.js":"7","D:\\Trash\\WebsiteDevelopment\\freelance\\game-land\\client\\src\\pages\\Customers.js":"8"},{"size":220,"mtime":1612118224904,"results":"9","hashOfConfig":"10"},{"size":674,"mtime":1612187559923,"results":"11","hashOfConfig":"10"},{"size":1076,"mtime":1612187741518,"results":"12","hashOfConfig":"10"},{"size":1485,"mtime":1612187792973,"results":"13","hashOfConfig":"10"},{"size":2643,"mtime":1612178612435,"results":"14","hashOfConfig":"10"},{"size":200,"mtime":1612176881401,"results":"15","hashOfConfig":"10"},{"size":403,"mtime":1612186424042,"results":"16","hashOfConfig":"10"},{"size":1409,"mtime":1612187291926,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1999vvc",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Trash\\WebsiteDevelopment\\freelance\\game-land\\client\\src\\index.js",[],["36","37"],"D:\\Trash\\WebsiteDevelopment\\freelance\\game-land\\client\\src\\App.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\game-land\\client\\src\\components\\NavBar.js",["38"],"D:\\Trash\\WebsiteDevelopment\\freelance\\game-land\\client\\src\\pages\\CustomersToday.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\game-land\\client\\src\\components\\CustomerCard.js",["39","40"],"import Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport {\r\n  MIN_30,\r\n  HOUR_1,\r\n  UNLIMIT,\r\n} from \"../consts/plans\";\r\n\r\nconst CustomerCard = (props) => {\r\n  const background = () => {\r\n    if (props.plan === MIN_30) {\r\n      const today = new Date();\r\n      const exitHour = props.exitTime.split(\":\")[0];\r\n      const exitMinute = props.exitTime.split(\":\")[1];\r\n      if (today.getHours() > exitHour) {\r\n        return \"warning\";\r\n      } else if (\r\n        today.getHours() === exitHour &&\r\n        today.getMinutes() > exitMinute\r\n      ) {\r\n        return \"warning\";\r\n      }\r\n    }\r\n    if (props.plan === HOUR_1) {\r\n      const today = new Date();\r\n      const exitHour = props.exitTime.split(\":\")[0];\r\n      const exitMinute = props.exitTime.split(\":\")[1];\r\n      if (today.getHours() > exitHour) {\r\n        return \"warning\";\r\n      } else if (\r\n        today.getHours() === exitHour &&\r\n        today.getMinutes() > exitMinute\r\n      ) {\r\n        return \"warning\";\r\n      }\r\n    }\r\n    if (props.plan === UNLIMIT) {\r\n      const today = new Date();\r\n      const exitHour = props.exitTime.split(\":\")[0];\r\n      const exitMinute = props.exitTime.split(\":\")[1];\r\n      const exitSecond = props.exitTime.split(\":\")[2];\r\n      if (today.getHours() > exitHour) {\r\n        return \"warning\";\r\n      }\r\n    }\r\n    return \"success\";\r\n  };\r\n  return (\r\n    <Card className=\"text-center mb-3\" bg={background()} text=\"light\">\r\n      <Card.Body>\r\n        <Card.Title>{props.name}</Card.Title>\r\n        <Card.Text>\r\n          <Row>\r\n            <Col className=\"bgGlass\">\r\n              <i>Номер ребенка: </i>\r\n              <br /> <b>{props.givenId}</b>\r\n            </Col>\r\n            <Col>\r\n              <i>Номер родителей: </i>\r\n              <br /> <b>{props.parentsPhone}</b>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <i>Вход:</i>\r\n              <br /> <b> {props.enterTime}</b>\r\n            </Col>\r\n            <Col className=\"bgGlass\">\r\n              <i>Покидание:</i>\r\n              <br /> <b> {props.exitTime}</b>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"bgGlass\">\r\n              {\" \"}\r\n              <i>Тариф: </i>\r\n              <br /> <b>{props.plan} </b>\r\n            </Col>\r\n          </Row>\r\n        </Card.Text>\r\n        <Button variant=\"danger\">Ребенок покинул зал</Button>\r\n      </Card.Body>\r\n      <Card.Footer>{props.date}</Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\nexport default CustomerCard;\r\n","D:\\Trash\\WebsiteDevelopment\\freelance\\game-land\\client\\src\\consts\\plans.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\game-land\\client\\src\\components\\Loader.js",[],"D:\\Trash\\WebsiteDevelopment\\freelance\\game-land\\client\\src\\pages\\Customers.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":10,"nodeType":"47","messageId":"48","endLine":1,"endColumn":15},{"ruleId":"45","severity":1,"message":"49","line":41,"column":13,"nodeType":"47","messageId":"48","endLine":41,"endColumn":23},{"ruleId":"45","severity":1,"message":"50","line":42,"column":13,"nodeType":"47","messageId":"48","endLine":42,"endColumn":23},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'exitMinute' is assigned a value but never used.","'exitSecond' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]